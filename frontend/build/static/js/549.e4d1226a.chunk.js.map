{"version":3,"file":"static/js/549.e4d1226a.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElement/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const filePickerRef = useRef();\n  const [file, setFile] = useState();\n  const [imageUrl, setImageUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setImageUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {imageUrl && <img src={imageUrl} alt=\"Preview\" />}\n          {!imageUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const blurHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const { onInput, id } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={blurHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        row={props.row || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={blurHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formValidity,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialValid) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialValid,\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      inputId: id,\n      value: value,\n      isValid: isValid,\n    });\n  }, []);\n\n  const setDataHandler = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formValidity: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setDataHandler];\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useForm } from \"../../shared/hooks/form-hook\";\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\n\nimport \"./Auth.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Auth = () => {\n  const authCtx = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\n\n  const [formState, inputHandler, setDataHandler] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setDataHandler(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setDataHandler(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const data = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          {\n            \"Content-Type\": \"application/json\",\n          },\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          })\n        );\n        authCtx.login(data.userId, data.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const data = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          \"POST\",\n          {},\n          formData\n        );\n\n        authCtx.login(data.userId, data.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={formSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              id=\"name\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter your name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"email\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter valid password (min. 6 characters).\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","filePickerRef","useRef","useState","file","setFile","imageUrl","setImageUrl","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","blurHandler","element","placeholder","onBlur","row","htmlFor","label","children","formReducer","formIsValid","inputId","inputs","formValidity","useForm","initialInputs","formState","useCallback","inputData","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","authCtx","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","errorHandler","email","password","inputHandler","setDataHandler","formSubmitHandler","preventDefault","process","JSON","stringify","data","login","userId","token","formData","FormData","append","name","image","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}