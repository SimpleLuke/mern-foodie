{"version":3,"file":"static/js/728.dbb7be7d.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const authCtx = useContext(AuthContext);\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\n  const history = useHistory();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const submitFormHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", formState.inputs.image.value);\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        { Authorization: \"Bearer \" + authCtx.token },\n        formData\n      );\n      history.push(\"/\");\n    } catch (err) {}\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <form onSubmit={submitFormHandler} className=\"place-form\">\n        {isLoading && <LoadingSpinner asOverlay />}\n\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          Add Food\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const filePickerRef = useRef();\n  const [file, setFile] = useState();\n  const [imageUrl, setImageUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setImageUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {imageUrl && <img src={imageUrl} alt=\"Preview\" />}\n          {!imageUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const blurHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const { onInput, id } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={blurHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        row={props.row || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={blurHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formValidity,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialValid) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialValid,\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      inputId: id,\n      value: value,\n      isValid: isValid,\n    });\n  }, []);\n\n  const setDataHandler = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formValidity: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setDataHandler];\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["authCtx","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","errorHandler","history","useHistory","useForm","title","value","isValid","description","address","image","formState","inputHandler","submitFormHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","onSubmit","className","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","filePickerRef","useRef","useState","file","setFile","imageUrl","setImageUrl","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","blurHandler","placeholder","onBlur","row","htmlFor","formReducer","formIsValid","inputId","formValidity","initialInputs","useCallback","inputData","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}