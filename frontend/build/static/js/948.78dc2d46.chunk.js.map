{"version":3,"file":"static/js/948.78dc2d46.chunk.js","mappings":"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","sources":["shared/components/UIElement/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElement/Card.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport \"./Map.css\";\n\nconst Map = (props) => {\n  const mapRef = useRef();\n  const { center, zoom } = props;\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom,\n    });\n\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElement/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElement/Modal\";\nimport Map from \"../../shared/components/UIElement/Map\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [openMap, setOpenMap] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\n\n  const openMapHandler = () => setOpenMap(true);\n  const closeMapHandler = () => setOpenMap(false);\n  const openDeleteHandler = () => setOpenDelete(true);\n  const closeDeleteHandler = () => setOpenDelete(false);\n  const confirmDeleteHandler = async () => {\n    setOpenDelete(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        { Authorization: \"Bearer \" + authCtx.token }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Modal\n        show={openMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={openDelete}\n        onCancel={closeDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button onClick={closeDeleteHandler} inverse>\n              CANCEL\n            </Button>\n            <Button onClick={confirmDeleteHandler} danger>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Card className=\"place-item__content\">\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {authCtx.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {authCtx.userId === props.creatorId && (\n              <Button onClick={openDeleteHandler} danger>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElement/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No foods found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Food</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\n\nconst UserPlaces = () => {\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\n  const [userPlaces, setUserPlaces] = useState();\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const data = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n\n        setUserPlaces(data.userPlaces);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const onDelete = (deletePlaceId) => {\n    setUserPlaces((prev) => prev.filter((place) => place.id !== deletePlaceId));\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && userPlaces && (\n        <PlaceList items={userPlaces} onDelete={onDelete} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","ref","className","style","authCtx","useContext","AuthContext","useState","openMap","setOpenMap","openDelete","setOpenDelete","useHttpClient","isLoading","error","sendRequest","errorHandler","closeMapHandler","closeDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","Card","src","image","alt","title","description","userId","creatorId","to","items","length","place","creator","location","userPlaces","setUserPlaces","useParams","fetchPlaces","data","deletePlaceId","prev","filter","children"],"sourceRoot":""}